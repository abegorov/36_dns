//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

options {
  listen-on port 53 {
    127.0.0.1;
    {% for addr in bind_listen_on %}
    {{ addr }};
    {% endfor %}
  };
  listen-on-v6 port 53 {
    ::1;
    {% for addr in bind_listen_on_v6 %}
    {{ addr }};
    {% endfor %}
  };
  directory          "/var/named";
  dump-file          "/var/named/data/cache_dump.db";
  statistics-file    "/var/named/data/named_stats.txt";
  memstatistics-file "/var/named/data/named_mem_stats.txt";
  secroots-file      "/var/named/data/named.secroots";
  recursing-file     "/var/named/data/named.recursing";

  allow-new-zones yes;

  allow-query { {{ bind_allow_query }}; };
  allow-transfer { {{ bind_allow_transfer }}; };
  allow-update { {{ bind_allow_update }}; };

  /*
    - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
    - If you are building a RECURSIVE (caching) DNS server, you need to enable
      recursion.
    - If your recursive DNS server has a public IP address, you MUST enable access
      control to limit queries to your legitimate users. Failing to do so will
      cause your server to become part of large scale DNS amplification
      attacks. Implementing BCP38 within your network would greatly
      reduce such attack surface
  */
  recursion {{ 'yes' if bind_recursion else 'no' }};

  dnssec-validation auto;

  managed-keys-directory "/var/named/dynamic";
  geoip-directory "/usr/share/GeoIP";

  pid-file "/run/named/named.pid";
  session-keyfile "/run/named/session.key";

  /* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
  include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
  channel default_debug {
    file "data/named.run";
    severity dynamic;
  };
};


include "/etc/named.root.key";

include "/etc/rndc.key";
{% for key in bind_server_keys %}
include "/etc/named/{{ key }}.key";
{% endfor %}
{% for key in bind_client_keys %}
include "/etc/named/{{ key }}.key";
{% endfor %}

controls {
  inet 127.0.0.1 allow { 127.0.0.1; } keys { "rndc-key"; };
  inet ::1 allow { ::1; } keys { "rndc-key"; };
  {% for addr in bind_rndc_control %}
  inet {{ addr }} allow {
    {% for allow_addr in bind_rndc_allow %}
    {{ allow_addr }};
    {% endfor %}
  } keys { "rndc-key"; };
  {% endfor %}
};

server 127.0.0.1 { keys { "{{ inventory_hostname }}-key"; }; };
{% for server in bind_servers %}
server {{ server }} { keys { "{{ inventory_hostname }}-key"; }; };
{% endfor %}
{% if bind_acls %}

{% for acl, addrs in bind_acls.items() %}
acl {{ acl }} {
  ! 127.0.0.1;
  {% for addr in addrs %}
  {{ addr }};
  {% endfor %}
};
{% endfor %}
{% endif %}
{% for view_name, view in bind_views.items() %}

view "{{ view_name }}" {
  match-clients { {{ view.match_clients | default('any') }}; };
  include "/etc/named.rfc1912.zones";
  zone "." IN {
    type hint;
    file "named.ca";
  };
  {% for zone, opts in view.zones.items() %}
  {% set zone_file = opts.template | default(zone) %}
  zone "{{ zone }}" {
    type {{ opts.type }};
    {% if opts.primaries | default(False) %}
    primaries {
      {% for addr in opts.primaries %}
      {{ addr }};
      {% endfor %}
    };
    {% endif %}
    {% if opts.also_notify | default(False) %}
    also-notify {
      {% for addr in opts.also_notify %}
      {{ addr }};
      {% endfor %}
    };
    {% endif %}
    {% if opts.allow_notify | default(False) %}
    allow-notify {
      {% for key in opts.allow_notify %}
      key "{{ key }}-key";
      {% endfor %}
    };
    {% endif %}
    {% if opts.allow_transfer | default(False)  %}
    allow-transfer {
      {% for key in opts.allow_transfer %}
      key "{{ key }}-key";
      {% endfor %}
    };
    {% endif %}
    {% if opts.allow_update | default(False) %}
    allow-update {
      {% for key in opts.allow_update %}
      key "{{ key }}-key";
      {% endfor %}
    };
    {% endif %}
    {% if opts.allow_update_forwarding | default(False) %}
    allow-update-forwarding {
      {% for key in opts.allow_update_forwarding %}
      key "{{ key }}-key";
      {% endfor %}
    };
    {% endif %}
    {% if opts.type == "secondary" %}
    file "/var/named/slaves/{{ view_name }}@{{ zone }}";
    {% elif opts.template in bind_dynamic_zone_templates %}
    file "/var/named/dynamic/{{ zone_file }}";
    {% elif opts.template in bind_static_zone_templates %}
    file "/var/named/data/{{ zone_file }}";
    {% endif %}
  };
  {% endfor %}
};
{% endfor %}
